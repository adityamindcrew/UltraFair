name: PR Review with ChatGPT

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run ESLint
        run: npm run lint || true

      - name: Analyze Code with ChatGPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "## 🧠 ChatGPT Review Summary" > pr_review.md
          echo "\`\`\`" >> pr_review.md

          # Fetch master and generate diff
          git fetch origin master
          git diff origin/master...HEAD -- . "src/**/*.js" "src/**/*.jsx" "src/**/*.ts" "src/**/*.tsx" > diff.txt

          if [ ! -s diff.txt ]; then
            echo "No changes found in source files." >> pr_review.md
          else
            # Limit size for GPT and escape for JSON
            DIFF_CONTENT=$(head -c 12000 diff.txt | jq -Rs .)

            REQUEST_PAYLOAD=$(cat <<EOF
{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "You are a senior React developer reviewing a pull request."
    },
    {
      "role": "user",
      "content": "Here is the code diff:\n$DIFF_CONTENT\nPlease provide a concise PR review with suggestions and improvements."
    }
  ]
}
EOF
)

            # Call OpenAI API
            RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -H "Content-Type: application/json" \
              -d "$REQUEST_PAYLOAD")

            # Extract response or fallback
            echo "$RESPONSE" | jq -r '.choices[0].message.content // "❌ No response from ChatGPT."' >> pr_review.md
          fi

          echo "\`\`\`" >> pr_review.md

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: pr_review.md
